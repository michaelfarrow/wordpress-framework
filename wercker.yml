box:
  id: weyforth/wercker-box-wordpress
  tag: 0.2.1

dev:

  services:
    - id: mariadb
      tag: 10.1.13
      env:
        MYSQL_ROOT_PASSWORD: secret

  steps:
    # Setup some environment variables, including database credentials from
    # linked containers, aswell as defining cache directories.
    - script:
        name: export env vars
        code: |
          export WEB_ROOT=/var/www/html
          export WORDPRESS_DB_HOST=$MARIADB_PORT_3306_TCP_ADDR
          export WORDPRESS_DB_PASSWORD=$MARIADB_ENV_MYSQL_ROOT_PASSWORD
          export WERCKER_APPLICATION_CACHE="$WERCKER_CACHE_DIR/app"
          export WP_PLUGIN_CACHE="$WERCKER_APPLICATION_CACHE/plugins"
          export WP_THEME_CACHE="$WERCKER_APPLICATION_CACHE/themes"
          export PATH="$WERCKER_ROOT/themes/sage/node_modules/.bin:$PATH"
          export DB_BACKUP_LOCATION="$WERCKER_ROOT/data/db.sql"
          export UPLOADS_BACKUP_LOCATION="$WERCKER_ROOT/data/uploads"
          export UPLOADS_LOCATION="$WEB_ROOT/wp-content/uploads"

    # Link our tools
    - script:
        name: link tools
        code: |
          ln -s "$WERCKER_ROOT/tools/snapshot" /usr/local/bin/snapshot
          ln -s "$WERCKER_ROOT/tools/snapshot-restore" /usr/local/bin/snapshot-restore

    # To work properly offline when using --docker-local, we must manually
    # download plugins and themes to the cache directory, and install them
    # from their cached archives. Here we just setup those cache directories.
    - script:
        name: create cache directories
        code: |
          mkdir -p "$WP_PLUGIN_CACHE"
          mkdir -p "$WP_THEME_CACHE"

    # Remove opcache from php to have our modifications show up instantly
    - script:
        name: remove opcache
        code: rm -rf /usr/local/etc/php/conf.d/opcache-recommended.ini

    # The default Wordpress image is quite good. It copies all the standard
    # Wordpress files on container run, however, the entrypoint script that does
    # this only does so if we pass apache-* or php-fpm as the argument. It would
    # also run the passed command when it's done, starting the server. We want to
    # do the install at this point, but not run the server until much later, so we
    # need to create an empty shell script to pass as the argument. We'll call the
    # apache run command manually later.
    - script:
        name: create null apache2 script
        code: |
          echo "#!/bin/sh" > /usr/local/bin/apache2-null
          chmod +x /usr/local/bin/apache2-null
    - script:
        name: move wordpress files into place
        code: |
          cd "$WEB_ROOT"
          /entrypoint.sh apache2-null

    # Set these values here so we don't have to add them on every wp-cli step.
    # $WEB_ROOT and $WERCKER_WP_CLI_ENV_USER vars are exported.
    - weyforth/wp-cli-env:
        name: setup wp-cli environment
        dir: $WEB_ROOT
        user: www-data

    # Do the Wordpress install. Esentially bypass the install screen you would
    # be presented with when you visit a fresh Wordpress install. Wordpress needs
    # a url to install properly, so we just pass localhost here. We will dynamically
    # set the url using a bit of injected php later.
    - weyforth/wp-cli:
        name: install core
        cmd: core install --url="http://localhost" --title="Site Title" --admin_user=admin --admin_password=changeme --admin_email=johndoe@wordpress.com --skip-email

    # Remove the standard wordpress themes.
    - script:
        name: remove standard themes
        code: |
          rm -rf "$WEB_ROOT/wp-content/themes/twentyfourteen"
          rm -rf "$WEB_ROOT/wp-content/themes/twentyfifteen"
          rm -rf "$WEB_ROOT/wp-content/themes/twentysixteen"

    # Manually pull all our themes and cache them.
    - script:
        name: pull themes
        code: |
          export WP_THEME_SAGE_VERSION=8.4.1
          export WP_THEME_SAGE="$WP_THEME_CACHE/sage.$WP_THEME_SAGE_VERSION.zip"
          [ -f "$WP_THEME_SAGE" ] || curl -L -o "$WP_THEME_SAGE" "https://github.com/roots/sage/archive/$WP_THEME_SAGE_VERSION.zip"
          [ -d "$WERCKER_ROOT/themes/sage" ] || ( unzip -q "$WP_THEME_SAGE" -d "$WERCKER_ROOT/themes" && mv "$WERCKER_ROOT/themes/sage"* "$WERCKER_ROOT/themes/sage" )

    # Add composer vendor dir to gitignore
    - script:
        name: add composer vendor dir to gitignore
        code: |
          grep -q -F "/vendor/" .gitignore || echo "/vendor/" >> .gitignore
        cwd: $WERCKER_ROOT/themes/sage

    # Symlink our development theme to the correct location and activate it.
    - script:
        name: symlink theme
        code: ln -s "$WERCKER_ROOT/themes/sage" "$WEB_ROOT/wp-content/themes/sage"
    - weyforth/wp-cli:
        name: activate theme
        cmd: theme activate sage

    # Install php dependencies.
    - weyforth/composer-install:
        name: install php dependencies
        cwd: $WERCKER_ROOT/themes/sage

    # Install node dependencies.
    - npm-install:
        name: install node dependencies
        options: --no-optional
        cwd: $WERCKER_ROOT/themes/sage
    - script:
        name: add bower to node dependencies
        code: |
          [ -f node_modules/.bin/bower ] || npm install --no-optional --save-dev bower@1.7.9
        cwd: $WERCKER_ROOT/themes/sage

    # Install bower dependencies.
    - script:
        name: install bower dependencies
        code: bower --allow-root install
        cwd: $WERCKER_ROOT/themes/sage

    # Build using gulp.
    - script:
        name: build
        code: gulp
        cwd: $WERCKER_ROOT/themes/sage

    # Manually pull all our plugins and cache them.
    - script:
        name: pull plugins
        code: |
          export WP_PLUGIN_META_BOX_VERSION=4.8.4
          export WP_PLUGIN_META_BOX="$WP_PLUGIN_CACHE/meta-box.$WP_PLUGIN_META_BOX_VERSION.zip"
          [ -f "$WP_PLUGIN_META_BOX" ] || curl -L -o "$WP_PLUGIN_META_BOX" "https://downloads.wordpress.org/plugin/meta-box.$WP_PLUGIN_META_BOX_VERSION.zip"

    # Install plugins.
    - weyforth/wp-cli:
        name: install and activate meta box plugin
        cmd: plugin install "$WP_PLUGIN_META_BOX" --activate

    # Set our pretty permalink structure.
    - weyforth/wp-cli:
        name: activate pretty permalinks
        cmd: rewrite structure "/%postname%/"

    # Prepend some defines to our wp-config.php file in order to set our WP_HOME
    # and WP_SITEURL environment variables automatically.
    - script:
        name: update wp-config.php
        code: |
          cd "$WEB_ROOT"
          cat wp-config.php > /tmp/wp-config.php.tmp
          echo '<?php if(!defined("WP_HOME")) define("WP_HOME", "http://" . $_SERVER["HTTP_HOST"]); ?>' > wp-config.php
          echo '<?php if(!defined("WP_SITEURL")) define("WP_SITEURL", WP_HOME); ?>' >> wp-config.php
          cat /tmp/wp-config.php.tmp >> wp-config.php

    # Restore our site to the last snapshot state, if one exists
    - script:
        name: restore snapshot
        code: snapshot-restore

    # Start the apache server
    - script:
        name: start apache2
        code: apache2

    # Finally, drop into a shell for tinkering and run gulp watch
    - internal/shell:
        code: |
          cd $WERCKER_ROOT/themes/sage
          gulp watch &

build:
  steps:
    - script:
        name: export env vars
        code: |
          export PATH="$WERCKER_ROOT/themes/sage/node_modules/.bin:$PATH"
    - script:
        name: remove vendor folders for local dev build testing
        code: |
          rm -rf node_modules
          rm -rf bower_components
          rm -rf vendor
          rm -rf dist
        cwd: $WERCKER_ROOT/themes/sage
    - weyforth/composer-install:
        name: install php dependencies
        cwd: $WERCKER_ROOT/themes/sage
    - npm-install:
        name: install node dependencies
        options: --no-optional
        cwd: $WERCKER_ROOT/themes/sage
    - script:
        name: install bower dependencies
        code: node_modules/.bin/bower --allow-root install
        cwd: $WERCKER_ROOT/themes/sage
    - script:
        name: build
        code: gulp --production
        cwd: $WERCKER_ROOT/themes/sage
    - script:
        name: export the theme
        code: |
          cp -r themes/sage "$WERCKER_OUTPUT_DIR"
          rm "$WERCKER_OUTPUT_DIR/sage/.gitignore"
          cp -r dokku "$WERCKER_OUTPUT_DIR"
          mv "$WERCKER_OUTPUT_DIR/dokku/Dockerfile" "$WERCKER_OUTPUT_DIR/Dockerfile"

deploy:
  steps:
    - add-to-known_hosts:
        hostname: $DOKKU_HOST
    - add-ssh-key:
        keyname: DOKKU_KEY
    - script:
        name: Initialize new repository
        code: |
          rm -rf .git
          git init
          git config --global user.name "wercker"
          git config --global user.email "pleasemailus@wercker.com"
          git remote add dokku dokku@$DOKKU_HOST:$DOKKU_APP
    - script:
        name: Add everything to the repository
        code: |
          git add .
          git commit -m "Result of deploy $WERCKER_GIT_COMMIT"
    - script:
        name: Push to dokku
        code: |
          git push -f dokku master
